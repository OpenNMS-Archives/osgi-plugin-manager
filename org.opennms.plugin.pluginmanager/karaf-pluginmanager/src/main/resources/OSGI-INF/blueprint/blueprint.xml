<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
  xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 
					http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
					http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0 
					https://svn.apache.org/repos/asf/aries/tags/blueprint-0.3.1/blueprint-cm/src/main/resources/org/apache/aries/blueprint/compendium/cm/blueprint-cm-1.1.0.xsd
					http://www.osgi.org/xmlns/blueprint-ext/v1.1.0 
					https://svn.apache.org/repos/asf/aries/tags/blueprint-0.3.1/blueprint-core/src/main/resources/org/apache/aries/blueprint/ext/blueprint-ext.xsd">

  
  <!-- configure the rest service for plugin manager -->
  <!-- ReST Servelet configuration for jersey -->
  <service interface="javax.servlet.http.HttpServlet">
    <service-properties>
      <entry key="alias" value="/pluginmgr/rest" />
    </service-properties>
    <bean class="com.sun.jersey.spi.container.servlet.ServletContainer">
      <argument ref="pluginManagerRestApplication" />
    </bean>
  </service>

  <bean id="pluginManagerRestApplication" class="org.opennms.features.pluginmgr.rest.impl.PluginManagerRestApplication" destroy-method="destroyMethod"/>

  <!-- ServiceLoader(FeaturesService featuresService) -->
  <bean id="serviceLoader" class="org.opennms.features.pluginmgr.rest.impl.ServiceLoader">
    <argument ref="pluginManagerImpl" />
  </bean>

  <!-- configures the main ui for plugin application -->
  
  <!-- Main Plugin UI -->
  <bean id="pluginManagerAdminApplicationFactory" class="org.opennms.features.pluginmgr.vaadin.config.karaf.PluginManagerAdminApplicationFactory">
    <property name="blueprintContainer" ref="blueprintContainer"/> <!-- predefined -->
    <property name="pluginManager" ref="pluginManagerImpl" />
    <property name="headerLinks">
      <map>
        <entry key="Licence Manager Diagnostics" value="/admin/plugin-manager-licence-diagnostics" />
        <entry key="Feature Manager Diagnostics" value="/admin/plugin-manager-feature-diagnostics" />
        <entry key="Plugin Manager Diagnostics" value="/admin/plugin-manager-plugin-diagnostics" />
      </map>
    </property>
  </bean>
  
  <!-- wires in the list editor prototype -->
  <bean id="instanceListEditor" class="org.opennms.features.pluginmgr.vaadin.pluginmanager.SimpleInstanceListEditor" scope="prototype"/>
  

  <!-- plugin manager service -->
  <service ref="pluginManagerImpl" interface="org.opennms.features.pluginmgr.PluginManager" />
     
  <bean id="pluginManagerImpl" class="org.opennms.features.pluginmgr.PluginManagerImpl" init-method="load" destroy-method="close">
    <!-- setting defaults if no pluginmodeldata.xml -->
    <property name="fileUri" value="${pluginModelfileUri}" />
    <property name="pluginServerUsername" value="${pluginServerUsername}" />
    <property name="pluginServerPassword" value="${pluginServerPassword}" />
    <property name="pluginServerUrl" value="${pluginServerUrl}" />
    <property name="licenceShoppingCartUrl" value="${licenceShoppingCartUrl}" />
  </bean>
  

  <service id="pluginManagerRestService" interface="org.opennms.vaadin.extender.ApplicationFactory" ref="pluginManagerAdminApplicationFactory">
    <service-properties>
      <entry key="alias" value="/admin/plugin-manager" />
    </service-properties>
  </service>

  <!-- feature Diagnostics page -->
  <bean id="featureDiagnosticsApplicationFactory" class="org.opennms.features.pluginmgr.vaadin.config.karaf.SimpleIframeApplicationFactory">
    <property name="iframePageUrl" value="/featuremgr/diagnostics/feature-mgr-rest-diagnostics.html" />
    <property name="headerLinks">
      <map>
        <entry key="Return to Plugin Manager" value="/admin/plugin-manager" />
      </map>
    </property>
  </bean>

  <service id="featureDiagnosticsService" interface="org.opennms.vaadin.extender.ApplicationFactory" ref="featureDiagnosticsApplicationFactory">
    <service-properties>
      <entry key="alias" value="/admin/plugin-manager-feature-diagnostics" />
    </service-properties>
  </service>

  <!-- Licence Diagnostics page -->
  <bean id="licenceDiagnosticsApplicationFactory" class="org.opennms.features.pluginmgr.vaadin.config.karaf.SimpleIframeApplicationFactory">
    <property name="iframePageUrl" value="/licencemgr/diagnostics/licence-mgr-rest-diagnostics.html" />
    <property name="headerLinks">
      <map>
        <entry key="Return to Plugin Manager" value="/admin/plugin-manager" />
      </map>
    </property>
  </bean>

  <service id="licenceDiagnosticsService" interface="org.opennms.vaadin.extender.ApplicationFactory" ref="licenceDiagnosticsApplicationFactory">
    <service-properties>
      <entry key="alias" value="/admin/plugin-manager-licence-diagnostics" />
    </service-properties>
  </service>
  
  <!-- Plugin Diagnostics page -->
  <bean id="pluginDiagnosticsApplicationFactory" class="org.opennms.features.pluginmgr.vaadin.config.karaf.SimpleIframeApplicationFactory">
    <property name="iframePageUrl" value="/pluginmgr/diagnostics/plugin-mgr-rest-diagnostics.html" />
    <property name="headerLinks">
      <map>
        <entry key="Return to Plugin Manager" value="/admin/plugin-manager" />
      </map>
    </property>
  </bean>

  <service id="pluginDiagnosticsService" interface="org.opennms.vaadin.extender.ApplicationFactory" ref="pluginDiagnosticsApplicationFactory">
    <service-properties>
      <entry key="alias" value="/admin/plugin-manager-plugin-diagnostics" />
    </service-properties>
  </service> 
  
  <!-- Maps in the test resource files for serving basic test pages -->
  <bean id="testResourceMapping" class="org.ops4j.pax.web.extender.whiteboard.runtime.DefaultResourceMapping">
    <property name="alias" value="/pluginmgr/diagnostics" />
    <property name="path" value="/diagnostics" />
  </bean>

  <service id="testResources" ref="testResourceMapping" interface="org.ops4j.pax.web.extender.whiteboard.ResourceMapping" />

  <!-- load default properties from  org.opennms.features.pluginmgr.config.cfg if exists -->
  <cm:property-placeholder persistent-id="org.opennms.features.pluginmgr.config" update-strategy="reload">
    <cm:default-properties>
      <cm:property name="pluginModelfileUri" value="./pluginmodeldata.xml" />
      <cm:property name="pluginServerUsername" value="admin" />
      <cm:property name="pluginServerPassword" value="admin" />
      <cm:property name="pluginServerUrl" value="http://localhost:8081" />
      <cm:property name="licenceShoppingCartUrl" value="http://opennms.org" />
    </cm:default-properties>
  </cm:property-placeholder>

</blueprint>
