<?xml version="1.0" encoding="UTF-8"?>

<!-- Copyright 2014 OpenNMS Group Inc., Entimoss ltd. -->
<!-- Licensed under the Apache License, Version 2.0 (the "License"); -->
<!-- you may not use this file except in compliance with the License. -->
<!-- You may obtain a copy of the License at -->
<!-- -->
<!-- http://www.apache.org/licenses/LICENSE-2.0 -->
<!-- -->
<!-- Unless required by applicable law or agreed to in writing, software -->
<!-- distributed under the License is distributed on an "AS IS" BASIS, -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. -->
<!-- See the License for the specific language governing permissions and -->
<!-- limitations under the License. -->

<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
  xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.1.0"
  xsi:schemaLocation="
                http://www.osgi.org/xmlns/blueprint/v1.0.0
                http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
                http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0
                http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd
                http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.1.0
                http://aries.apache.org/schemas/blueprint-ext/blueprint-ext-1.1.xsd
">

  <!-- Used for system properties -->
  <ext:property-placeholder placeholder-prefix="$[" placeholder-suffix="]" />

  <!-- load default properties from org.opennms.features.licencemgr.config.cfg if exists at startup -->
  <cm:property-placeholder persistent-id="org.opennms.features.featuremgr.config" update-strategy="none">
    <cm:default-properties>
      <!-- if true, will try to use local manifest file before trying to download new manifest -->
      <cm:property name="org.opennms.karaf.featuremgr.useLocalManifestAtStartup" value="true" />
      
      <!-- if true, will try to download manifest feature list from remote urls after initial startup -->
      <cm:property name="org.opennms.karaf.featuremgr.useRemotePluginManagers" value="false" />

      <!-- interval (ms) before retrying unsuccessful download of manifests -->
      <cm:property name="org.opennms.karaf.featuremgr.retryInterval" value="60000" />

      <!-- number of retrys if unsuccessful -1= forever until successful -->
      <cm:property name="org.opennms.karaf.featuremgr.retryNumber" value="1" />

      <!-- long term update interval (ms) before attempting to reload config. -1= only try on startup -->
      <cm:property name="org.opennms.karaf.featuremgr.updateInterval" value="-1" />

      <!-- comma separated local list of urls to contact remote licence managers -->
      <!-- in order to download feature manifest list for this system. Urls will be tried in order -->
      <cm:property name="org.opennms.karaf.featuremgr.remotePluginManagersUrls" value="http://localhost:8181/pluginmgr" />
      <!-- basic authentication username to access remote plugin manager -->
      <cm:property name="org.opennms.karaf.featuremgr.remoteUsername" value="admin" />
      <!-- basic authentication password to access remote plugin manager -->
      <cm:property name="org.opennms.karaf.featuremgr.remotePassword" value="admin" />
      <!-- karaf instance name defaults to karaf.name system property -->
      <cm:property name="org.opennms.karaf.featuremgr.karafInstance" value="$[karaf.name]" />
    </cm:default-properties>
  </cm:property-placeholder>

  <!-- karaf features service interface -->
  <reference id="featuresService" interface="org.apache.karaf.features.FeaturesService" />
  
  <!-- karaf configuration admin service -->
  <reference id="configurationAdmin" interface="org.osgi.service.cm.ConfigurationAdmin"/>

  <!-- plugin feature manager service -->
  <service interface="org.opennms.karaf.featuremgr.PluginFeatureManagerService" ref="pluginFeatureManagerImpl" />

  <bean id="pluginFeatureManagerImpl" class="org.opennms.karaf.featuremgr.PluginFeatureManagerImpl" init-method="init" destroy-method="destroy" >
    <property name="featuresService" ref="featuresService" />
    <property name="configurationAdmin" ref="configurationAdmin" />
    <property name="useLocalManifestAtStartup" value="${org.opennms.karaf.featuremgr.useLocalManifestAtStartup}" />
    <property name="useRemotePluginManagers" value="${org.opennms.karaf.featuremgr.useRemotePluginManagers}" />
    <property name="remotePluginManagersUrls" value="${org.opennms.karaf.featuremgr.remotePluginManagersUrls}" />
    <property name="remoteUsername" value="${org.opennms.karaf.featuremgr.remoteUsername}" />
    <property name="remotePassword" value="${org.opennms.karaf.featuremgr.remotePassword}" />
    <property name="installedManifestUri" value="file:$[karaf.etc]$[file.separator]installed-manifest-features.xml" />
    <property name="karafInstance" value="${org.opennms.karaf.featuremgr.karafInstance}" />
    <property name="retryInterval" value="${org.opennms.karaf.featuremgr.retryInterval}" />
    <property name="retryNumber" value="${org.opennms.karaf.featuremgr.retryNumber}" />
    <property name="updateInterval" value="${org.opennms.karaf.featuremgr.updateInterval}" />
  </bean>

  <!-- ReST Servelet configuration for jersey -->

  <bean id="featureManagerRestServlet" class="com.sun.jersey.spi.container.servlet.ServletContainer">
    <argument ref="featureManagerRestApplication" />
  </bean>

  <service interface="javax.servlet.Servlet" ref="featureManagerRestServlet">
    <service-properties>
      <entry key="osgi.http.whiteboard.servlet.pattern" value="/featuremgr/rest/v1-0/*" />
    </service-properties>
  </service>

  <bean id="featureManagerRestApplication" class="org.opennms.karaf.featuremgr.rest.impl.FeatureManagerRestApplication" destroy-method="destroyMethod" />

  <!-- ServiceLoader(FeaturesService featuresService, PluginFeatureManagerService pluginFeatureManagerService) -->
  <bean id="serviceLoader" class="org.opennms.karaf.featuremgr.rest.impl.ServiceLoader">
    <argument ref="featuresService" />
    <argument ref="pluginFeatureManagerImpl" />
  </bean>

  <!-- Maps in the test resource files for serving basic test pages -->
  <bean id="testResources" class="org.opennms.karaf.featuremgr.ResourceDummy"/>
  <service ref="testResources" auto-export="interfaces" >
    <service-properties>
      <entry key="osgi.http.whiteboard.resource.pattern" value="/featuremgr/diagnostics/*" />
      <entry key="osgi.http.whiteboard.resource.prefix" value="/diagnostics" />
    </service-properties>
  </service>

  <!-- command line commands -->
  <command-bundle xmlns="http://karaf.apache.org/xmlns/shell/v1.0.0">

    <!-- feature manager service commands -->

    <command name="plugin-feature-mgr/listInstalledManifest">
      <action class="org.opennms.karaf.featuremgr.cmd.ListInstalledManifestCommand">
        <property name="pluginFeatureManagerService" ref="pluginFeatureManagerImpl" />
      </action>
    </command>

    <command name="plugin-feature-mgr/installNewManifest">
      <action class="org.opennms.karaf.featuremgr.cmd.InstallNewManifestCommand">
        <property name="pluginFeatureManagerService" ref="pluginFeatureManagerImpl" />
      </action>
    </command>

    <command name="plugin-feature-mgr/uninstallManifest">
      <action class="org.opennms.karaf.featuremgr.cmd.UninstallManifestCommand">
        <property name="pluginFeatureManagerService" ref="pluginFeatureManagerImpl" />
      </action>
    </command>

    <command name="plugin-feature-mgr/installManifestFromUrl">
      <action class="org.opennms.karaf.featuremgr.cmd.InstallNewManifestFromUrlCommand">
        <property name="pluginFeatureManagerService" ref="pluginFeatureManagerImpl" />
      </action>
    </command>

    <command name="plugin-feature-mgr/setRemotePluginServers">
      <action class="org.opennms.karaf.featuremgr.cmd.SetRemotePluginServersCommand">
        <property name="pluginFeatureManagerService" ref="pluginFeatureManagerImpl" />
      </action>
    </command>

    <command name="plugin-feature-mgr/setKarafInstance">
      <action class="org.opennms.karaf.featuremgr.cmd.SetKarafInstanceCommand">
        <property name="pluginFeatureManagerService" ref="pluginFeatureManagerImpl" />
      </action>
    </command>

    <command name="plugin-feature-mgr/scheduleManifestDownload">
      <action class="org.opennms.karaf.featuremgr.cmd.SetScheduleManifestDownloadCommand">
        <property name="pluginFeatureManagerService" ref="pluginFeatureManagerImpl" />
      </action>
    </command>

    <command name="plugin-feature-mgr/persistConfiguration">
      <action class="org.opennms.karaf.featuremgr.cmd.PersistConfigurationCommand">
        <property name="pluginFeatureManagerService" ref="pluginFeatureManagerImpl" />
      </action>
    </command>

  </command-bundle>

</blueprint>
